# 解除默认前缀
unbind C-b
# 设置自定义前缀
# Ctrl+a为前缀，用来区别其他shell命令和tmux命令
set -g prefix C-a
# 第二指令前缀

# 窗口序号从1开始计数
set -g base-index 1
# 开启鼠标模式 
set-option -g mouse off

set -g focus-events on

# 绑定快捷键r刷新该文件更新
bind r source-file ~/.tmux.conf \; display-message "Config reloaded.."

# 绑定Ctrl+hjkl键为面板上下左右调整边缘的快捷指令
bind-key k resizep -U 5
bind-key j resizep -D 5
bind-key h resizep -L 5
bind-key l resizep -R 5

# 垂直水平分割新窗口
unbind '"'
unbind %
bind - splitw -v -c '#{pane_current_path}' # 垂直方向新增面板，默认进入当前目录
bind | splitw -h -c '#{pane_current_path}' # 水平方向新增面板，默认进入当前目录

# 使用vi 模式
setw -g mode-keys vi
# 修改复制控制为vim模式
# [ : 进入复制模式   ] ： 粘贴内容
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# 顶部路径显示
# set -g pane-border-status off
# set -g pane-border-format off
# set -g pane-border-format '#[fg=#808080]#{pane_title}'
# panes 分割线颜色
# set -g pane-border-style fg='#808080'

# tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
# if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
# if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

is_vim="children=(); i=0; pids=( $(ps -o pid=,tty= | grep -iE '#{s|/dev/||:pane_tty}' | awk '\{print $1\}') ); \
while read -r c p; do [[ -n c && c -ne p && p -ne 0 ]] && children[p]+=\" $\{c\}\"; done <<< \"$(ps -Ao pid=,ppid=)\"; \
while (( $\{#pids[@]\} > i )); do pid=$\{pids[i++]\}; pids+=( $\{children[pid]-\} ); done; \
ps -o state=,comm= -p \"$\{pids[@]\}\" | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' ''
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
# bind-key -T copy-mode-vi 'C-h' select-pane -L
# bind-key -T copy-mode-vi 'C-j' select-pane -D
# bind-key -T copy-mode-vi 'C-k' select-pane -U
# bind-key -T copy-mode-vi 'C-l' select-pane -R
# bind-key -T copy-mode-vi 'C-\' select-pane -l

# 关掉重命名功能
# setw -g automatic-rename off
# setw -g allow-rename off

# 复制到粘贴板

# 插件
# 插件管理 
# 使用方式：prefix I/U 
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
# 用户会话保存与恢复
# prefix + Ctrl-s Save
# prefix + Ctrl-r Restore
set -g @plugin 'tmux-plugins/tmux-resurrect'
# 自动保存，默认15分钟备份一次
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-save-interval '60' # 修改为一小时

# 菜单式操作
# prefix + /
# prefix + >/<
set -g @plugin 'jaclu/tmux-menus'

# 模式高亮
set -g @plugin 'MunifTanjim/tmux-mode-indicator'
# style values for prefix prompt
set -g @mode_indicator_prefix_mode_style 'bg=#61AFEF'
# style values for copy prompt
set -g @mode_indicator_copy_mode_style 'bg=#E5BF7B'
# style values for sync prompt
set -g @mode_indicator_sync_mode_style 'bg=#E06B75'
# style values for empty prompt
set -g @mode_indicator_empty_mode_style 'bg=#55B6C2'

# 打开文件
# copy mode 下v选择o打开
set -g @plugin 'tmux-plugins/tmux-open'



# 颜色配置
color_black="#27292C"
color_font="#000000"
color_blue="#258BD2"

# 位置、颜色配置
set -g status-bg $color_black
set -g status-fg $color_font
# 对齐方式
set-option -g status-justify left
# 左下角
set-option -g status-left '#{tmux_mode_indicator} #[bg=#61AFEF] #{session_name} #[bg=#27292C] '
set-option -g status-left-length 120
# 窗口列表
setw -g automatic-rename on
set-window-option -g window-status-format '#[fg=#808080]#I #W '
set-window-option -g window-status-current-format '#[bold]#[bg=#AFD787] ✔ #W '
# 右侧标题栏
set -g status-right '#[bold]#[bg=#d7875F] #h #[bg=#27292C] #[bold]#[fg=#AFD787]%a %m-%d %H:%M'

run '~/.config/tmux/plugins/tpm/tpm'


# 真色彩
# set -g default-terminal "tmux-256color"
# set-option -a terminal-overrides ",*256col*:RGB"
set -g default-terminal "xterm-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"

# set -g default-terminal screen-256color
# set-option -ga terminal-overrides ",*256col*:Tc"
